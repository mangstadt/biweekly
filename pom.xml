<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.sf.biweekly</groupId>
	<artifactId>biweekly</artifactId>
	<packaging>bundle</packaging> <!-- "bundle" used for OSGi support -->
	<version>0.6.8-SNAPSHOT</version>
	<name>biweekly</name>
	<url>http://github.com/mangstadt/biweekly</url>
	<inceptionYear>2013</inceptionYear>
	<organization>
		<name>Michael Angstadt</name>
	</organization>
	<description>An iCalendar parser/writer library written in Java.</description>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<licenses>
		<license>
			<name>FreeBSD License</name>
			<url>http://opensource.org/licenses/bsd-license.php</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Michael Angstadt</name>
			<email>mike.angstadt@gmail.com</email>
			<roles>
				<role>Lead Developer</role>
			</roles>
		</developer>
	</developers>

	<issueManagement>
		<system>Github Issue Tracker</system>
		<url>https://github.com/mangstadt/biweekly/issues</url>
	</issueManagement>

	<scm>
		<connection>scm:git:https://github.com/mangstadt/biweekly.git</connection>
		<developerConnection>scm:git:https://github.com/mangstadt/biweekly.git</developerConnection>
		<url>https://github.com/mangstadt/biweekly/commits/master</url>
	</scm>
	
	<properties>
		<java.version>1.6</java.version>
	</properties>

	<dependencies>
		<!--
		Selected portions of this library's source code have been incorporated into the biweekly code base to improve Android compatibility.
		See: https://groups.google.com/forum/?fromgroups=#!topic/ez-vcard-discuss/w2TK7yetwr8
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>
		-->
		<dependency>
			<groupId>com.github.mangstadt</groupId>
			<artifactId>vinnie</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.14.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.14.2</version>
			
			<!--
			The only classes that refer to objects from jackson-databind are JCalModule, JCalSerializer, and JCalDeserializer, all of which
			consume external objects from jackson-databind for their functionality, so any project using them will already have its own dependency
			on jackson-databind.
			-->
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
			<version>1.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
		<dependency> <!-- For testing XML 1.1 -->
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.7.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.4.0</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<!--
						The plugin must be instructed to retrieve the filtered files from the "target/classes" directory.
						Otherwise, it will copy the unfiltered versions in "src/main/resources" to the JAR.
						-->
						<Include-Resource>{maven-resources}, {biweekly/biweekly.properties=target/classes/biweekly/biweekly.properties}</Include-Resource>
						
						<!-- Mark Jackson as an optional dependency -->
						<Import-Package>
							com.fasterxml.jackson.*;resolution:=optional,
							*
						</Import-Package>
					</instructions>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.3</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Automatic-Module-Name>net.sf.biweekly</Automatic-Module-Name>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- Copy the project's dependencies into a folder -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- do not copy unit test dependencies -->
							<includeScope>compile</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Create a source code JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Create a Javadoc JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<linksource>true</linksource>
					<links>
						<link>https://mangstadt.github.io/vinnie/javadocs/latest/</link>
						<link>http://fasterxml.github.io/jackson-core/javadoc/2.6/</link>
					</links>
					<quiet>true</quiet>
					
					<!-- The build fails if it detects Javascript in the footer. -->
					<additionalOptions>
						<additionalOption>--allow-script-in-comments</additionalOption>
					</additionalOptions>
					
					<!-- exclude commons-codec -->
					<excludePackageNames>biweekly.util.org.*</excludePackageNames>
					
					<!-- Add Javascript syntax highlighter -->
					<top><![CDATA[
						<script src="doc-files/shCore.js" type="text/javascript"></script>
						<script src="doc-files/shBrushJava.js" type="text/javascript"></script>
					]]></top>
					<footer><![CDATA[
						<script type="text/javascript">
							SyntaxHighlighter.defaults["auto-links"] = false;
							SyntaxHighlighter.defaults["gutter"] = false;
							SyntaxHighlighter.defaults["tab-size"] = 2;
							SyntaxHighlighter.defaults["toolbar"] = false;
							SyntaxHighlighter.all();
						</script>
					]]></footer>
					<docfilessubdirs>true</docfilessubdirs>
					<stylesheetfile>src/main/javadoc/syntaxhighlighter.css</stylesheetfile>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!--
			FindBugs plugin
			To run: mvn findbugs:findbugs
			To view the results: mvn findbugs:gui
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.5</version>
			</plugin>

			<!--
			PMD plugin
			To run: mvn pmd:pmd
			Code duplication report: mvn pmd:cpd
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.6</version>
				<configuration>
					<targetJdk>${java.version}</targetJdk>
				</configuration>
			</plugin>

			<!-- 
			Mutation Testing
			To run: mvn pitest:mutationCoverage
			-->
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.1.10</version>
				<configuration>
					<targetClasses>
						<param>biweekly.*</param>
					</targetClasses>
					<excludedClasses>
						<!-- exclude commons-codec -->
						<param>biweekly.util.org.*</param>
					</excludedClasses>
					<targetTests>
						<param>biweekly.*</param>
					</targetTests>
				</configuration>
			</plugin>
			
			<!-- 
			For codecov.io.
			-->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.5.201505241946</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!--
		This profile will sign the JAR file, sources file, and javadocs file using the GPG key on the local machine.
		See: https://docs.sonatype.org/display/Repository/How+To+Generate+PGP+Signatures+With+Maven
		-->
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>release</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--
		This commented-out block can be used to disable DocLint, a Java 8 feature that fails the build if it detects errors in the javadocs.
		See: http://stackoverflow.com/a/22296107/13379
		-->
		<!--
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
	
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<doclint>none</doclint>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		-->
	</profiles>
</project>
